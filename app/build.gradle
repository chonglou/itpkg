apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.cargo'

def configDir = 'src/dist/lib/config'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.1.1'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
    maven { url 'http://repository.pentaho.org/artifactory/repo/' }
}

configurations {
    providedRuntime
}

dependencies {

    compile 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    //============ runtime============================================

    runtime "mysql:mysql-connector-java:${mysqlVersion}"
    runtime "org.postgresql:postgresql:${postgresqlVersion}"
    runtime 'org.apache.derby:derby:10.11.1.1'

    runtime "net.sf.ehcache:ehcache-core:${ehcacheVersion}"

    runtime "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
    runtime "org.hibernate:hibernate-ehcache:${hibernateVersion}"

    runtime "ch.qos.logback:logback-classic:${logbackVersion}"

    runtime "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"

    compile project(':core')
    compile project(':cms')
    compile project(':email')
//    compile project(':forum')
//    compile project(':ops')
//    compile project(':shop')
//    compile project(':teamwork')
//    compile project(':wiki')

    //======================= test =============================
    testCompile 'junit:junit'
    testCompile 'org.springframework.boot:spring-boot-starter-test'

}

def appTitle = 'IT-PACKAGE'
jar {
    baseName = appName + "-app"
    manifest {
        attributes 'Implementation-Title': appTitle,
                'Implementation-Version': version
    }

}

war {
    baseName = appName
    classpath += files(configDir)
    manifest {
        attributes 'Implementation-Title': appTitle,
                'Implementation-Version': version
    }

}


task wrapper(type: Wrapper) {

}

startScripts {
    classpath += files(configDir)
    applicationName = appName
    mainClassName = 'com.itpkg.app.Application'
}

run {
    classpath += files(configDir)
}


cargo {
    def tomcatVersion = '8.0.24'
    containerId = 'tomcat8x'
    port = 8080

    deployable {
        context = '/'
    }

    local {
        outputFile = file("$buildDir/output.log")
        timeout = 60000

        installer {
            installUrl = "http://mirror.cc.columbia.edu/pub/software/apache/tomcat/tomcat-8/v${tomcatVersion}/bin/apache-tomcat-${tomcatVersion}.zip"
            downloadDir = file("$projectDir/tmp")
            extractDir = file("$projectDir/tmp")
        }
    }
}
